{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nexport const useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchData = async () => {\n      setIsPending(true);\n      try {\n        const res = await fetch(url, {\n          signal: controller.signal\n        });\n        if (!res.ok) {\n          console.log(res);\n          throw new Error(res.statusText);\n        }\n        const data = await res.json();\n        setIsPending(false);\n        setError(null);\n        setData(data);\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"the fetch was aborted\");\n        } else {\n          setIsPending(false);\n          console.log(err);\n          setError(\"Could not fetch the error\");\n        }\n      }\n    };\n    fetchData();\n    return () => controller.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"Nv+1/iI0zq+2TB3Cnf0Mf/1lILU=\");","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","data","setData","isPending","setIsPending","error","setError","controller","AbortController","fetchData","res","fetch","signal","ok","console","log","Error","statusText","json","err","name","abort"],"sources":["C:/Users/kayla/OneDrive/Desktop/Code/space-tourism-express/client/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    const fetchData = async () => {\r\n      setIsPending(true);\r\n      try {\r\n        const res = await fetch(url, { signal: controller.signal });\r\n        if (!res.ok) {\r\n          console.log(res);\r\n          throw new Error(res.statusText);\r\n        }\r\n        const data = await res.json();\r\n        setIsPending(false);\r\n        setError(null);\r\n        setData(data);\r\n      } catch (err) {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"the fetch was aborted\");\r\n        } else {\r\n          setIsPending(false);\r\n          console.log(err);\r\n          setError(\"Could not fetch the error\");\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => controller.abort();\r\n  }, [url]);\r\n\r\n  return { data, isPending, error };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,IAAIC,eAAe,EAAE;IACxC,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BL,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAMM,GAAG,GAAG,MAAMC,KAAK,CAACZ,GAAG,EAAE;UAAEa,MAAM,EAAEL,UAAU,CAACK;QAAO,CAAC,CAAC;QAC3D,IAAI,CAACF,GAAG,CAACG,EAAE,EAAE;UACXC,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;UAChB,MAAM,IAAIM,KAAK,CAACN,GAAG,CAACO,UAAU,CAAC;QACjC;QACA,MAAMhB,IAAI,GAAG,MAAMS,GAAG,CAACQ,IAAI,EAAE;QAC7Bd,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAAC,IAAI,CAAC;QACdJ,OAAO,CAACD,IAAI,CAAC;MACf,CAAC,CAAC,OAAOkB,GAAG,EAAE;QACZ,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;UAC7BN,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;QACtC,CAAC,MAAM;UACLX,YAAY,CAAC,KAAK,CAAC;UACnBU,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;UAChBb,QAAQ,CAAC,2BAA2B,CAAC;QACvC;MACF;IACF,CAAC;IACDG,SAAS,EAAE;IACX,OAAO,MAAMF,UAAU,CAACc,KAAK,EAAE;EACjC,CAAC,EAAE,CAACtB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,IAAI;IAAEE,SAAS;IAAEE;EAAM,CAAC;AACnC,CAAC;AAACL,EAAA,CAlCWF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}